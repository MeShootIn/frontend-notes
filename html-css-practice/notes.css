/* Импорты */

/*
Порядок импортов (всё происходит асинхронно):
1) Шрифты: обычно долго загружаются;
2) reset.css;
3) ...
 */


/* Свойство display */

/*
Определяет, как будет показан (или не показан) элемент. Значения:
* none: элемент не отображается
* block: элемент показывается как блочный, занимает всю доступную ширину и
всегда начинается с новой строки
* inline: при возможности помещается в ту же строку, занимает столько места,
сколько ему требуется
* inline-block: ведут себя как инлайн-элементы, но им можно задать свойства
блоков
* flex, grid, table и др.
*/


/* Особенности display: inline-block */

/*
<div class="box">
  <div class="block">Блок 1</div>
  <div class="block">Блок 2</div>
  <div class="block">Блок 3</div>
</div>

Элементы с inline-block реагируют на font-size => будет отступ между "block"'ами
 = font-size. Способы устранения:
1) .box { font-size: 0; }
2) <div class="block">Блок 1</div><div class="block">Блок 2</div> - ПЛОХО!
*/


/* Особенности box-model */

/*
Схлопывание внешних отступов (margin collapsing) - margin-top и margin-bottom
иногда объединяются в один, с размером равным наибольшему из них
*/


/* overflow */

/*
Определяет, как отображать контент, если он не помещается в заданную область.
Значения:
* visible (по умолчанию): контент может выходить за пределы блока
* hidden: контент, который не помещается в заданную область, не отображается
* scroll: в блок ОБЯЗАТЕЛЬНО добавляется скроллбар
* auto: если контент не помещается в заданную область, то добавляется скроллбар
*/


/* position */

/*
Определяет способ позиционирования элемента. Значения:
* static (по умолчанию): элемент находится в обычном потоке
* relative: относительное позиционирование
* absolute: позиционируется относительно родителя с заданным position (элемент
выпадает из потока)
* fixed: позиционируется относительно окна браузера (элемент выпадает из потока)
* sticky: "липкое" позиционирование
*/


/* Сетки */

/*
Преимущества сеток:
* Позволяет быстро организовать макет
* Можно управлять поведением содержимого на разных разрешениях экрана
* Существенно сокращает количество css кода для реализации адаптивной версии
* Позволяет задать поведение и отступы у элементов на странице
* ...

Особенности сеток:
* Максимальное количество колонок заранее определено
* У колонок одинаковая ширина
* Между колонками одинаковые отступы
*/


/* Flexbox и Grid */

/*
https://flexboxfroggy.com/
https://cssgridgarden.com/

Для более глобальных элементов (сетка из карточек, товаров, ...) лучше grid, а
для менее (содержимое карточки, товара, ...) - flexbox.
*/


/* Переменные */

/*
* Уменьшение дублирования в таблице стилей
* Легко менять значение стилей в больших и сложных веб-сайтах
* Есть доступ из JS, можно менять их значение
* Использование в SVG
 */

:root {
  --global-link-color: red;
  --default-card-margin: 10px;
}

.link {
  color: var(--global-link-color);
}

.card {
  margin: var(--default-card-margin);
}

.container {
  /* Доступна только внутри класса и его дочерних элементов */
  --container-card-margin: calc(var(--default-card-margin) * 2);
}

.container .card {
  margin: var(--container-card-margin);
}


/* Недостатки CSS */

/*
1. Отсутствие пространства имен дает возможность совпадения селекторов и их
неожиданных влияний.
2. Отсутствие изоляции: часть CSS-свойств наследуются.
3. CSS сложно понять без разметки, к которой он применен.
4. В CSS поощряется каскад, использование которого связывает стилизацию и
разметку, что усложняет модификацию и того, и другого.
*/


/* Методология БЭМ */

/*
БЭМ (Блок, Элемент, Модификатор) позволяет создавать расширяемые и повторно
используемые независимые компоненты интерфейса.

* Блок - повторно используемый функциональный независимый компонент. Может быть
вложен в другой блок. Не должен описывать состояние, размеры, позиционирование.
Примеры: menu, button, search-form, logo, header.

* Элемент - составная часть блока. Пример: menu__button, search-form__input.

* Модификатор - определяет внешний вид, состояние, поведение блока/элемента.
Пример: button_disabled, search-form__button_size-xs.
 */