/*
Способы подключения CSS:
1) Внешний: <link rel="stylesheet" href="style.css"\> внутри <head>
2) Внутренний: <style>...</style> внутри <head>
3) Встроенный (inline css): <p style="...">
*/



/* Селекторы */

/* Общий вид:
селектор {
  свойство: значение;
  свойство: значение;
  ...
} <- блок объявлений */

/* Универсальный селектор */
* {
  margin: 0;
  padding: 0;
}

/* Селектор тега */
p {
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

/* Селектор класса */
.some-class {
  font-size: large;
}

/* Селектор по id */
#some-id {
  margin: 0%;
}

/* Селектор по атрибуту */
a[href="https://google.com"] {
  font-weight: bold;
}

/* Селекторы потомков (контекстные селекторы) */
/* TODO Читать всегда справа налево */
div#parag p.note {
  color: aqua;
}

/* Селектор дочерних элементов (элемент на 1-ом уровне вложенности по отношению
к данному селектору) */
div.note > b {
  color: darkseagreen;
}

/* Сестринские элементы (1-ый p, идущий СТРОГО ПОСЛЕ h2) */
h2 + p {
  margin-top: 20px;
}

/* Селектор псевдоклассов */
a:hover {
  color: gray;
}

/* Селектор псевдоэлементов */
ul li::marker {
  color: darkgray;
}

/* !important в конце свойства даёт приоритет перед остальными (плохой тон) */
.better {
  border: none !important;
}



/* Каскадность, наследование, специфичность */

/*
CSS (Cascading Style Sheets) - каскадные (к элементу может применяться
несколько правил и нижеопределённые свойства перекрывают верхние) таблицы стилей

Приоритеты:
1) Важность
2) Специфичность
3) Исходный порядок
*/

/*
https://youtu.be/R32L3i0Pfoo?list=PLp8YG0BfOLkzxfUfwl952DeYTRUpPISvm&t=4866
Побеждает селектор с наибольшей специфичностью:
1) Внутри <style> или атрибута style
2) Наличие у селектора id
3) Наличие селектора класса, атрибута или псевдо-класса
4) Наличие селектора элемента или псевдо-элемента
*/



/* Сброс CSS */

/*
Каждая веб-страница использует по крайней мере один CSS: стиль клиентского
приложения.
Этот файл CSS включён в браузер и вызывается:
* каждый раз, когда веб-страница визуализируется;
* до того, как применяется любой из наших CSS.
Стили браузера по умолчанию могут МЕШАТЬ стилям, которые мы хотим применить.

Сброс CSS особенно полезен для НОРМАЛИЗАЦИИ РАЗМЕРА ТЕКСТА и удаления всех
ОТСТУПОВ:
1) Скачать reset.css:
https://marksheet.io/css/reset.css
2) Подключить перед собственными стилями:
<link rel="stylesheet" href="reset.css">
<link rel="stylesheet" href="styles.css">
Есть ещё normalize (приводит к единому отображению), но он может подкинуть
ненужные стили.
*/



/* Блочная и строчная модели */

/*
По порядку: width/height, padding, border, margin.
 */

/*
box-sizing: content-box (по умолч., размер += padding + border) либо border-box.
По умолчанию padding увеличивает размер элемента. А при box-sizing: border-box,
padding уменьшит размер содержимого внутри элемента.

Блочные заполняют всю ширину родительского элемента и переносятся на новую
строку.
Строчные - просто идут друг за другом.
*/

/*
.content-box {
  width: 200px;
  padding: 20px;
  border: 10px;
} => width: 260px

.border-box {
  width: 200px;
  padding: 20px;
  border: 10px;
  box-sizing: border-box;
} => width: 200px
 */

/*
Единицы размера в CSS:
* px
* %
* em/rem (em / root em) - размер относительно родительского значения font-size.
Корневой элемент - html (по умолч. 16px).
* vw/vh (viewport ...) - % относительно экрана
*/